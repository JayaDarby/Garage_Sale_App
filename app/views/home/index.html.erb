<!DOCTYPE html>
<html>
  <head>
  <style type="text/css">
      html, body {  margin: 0; padding: 0; }
      #map { height: 500px; 
              width:1000px; 
      }
      body {

        background-image: url("/images/homepagecopy.jpg");
        background-repeat: no-repeat;
        background-size: 100% 684px;

        background-image: url("/images/homepagecropped.jpg");
        background-repeat: no-repeat;
        background-size: 100% 666px;
        clip: rect(0px,60px,200px,0px);

      }
      #space {
        width:100%;
        height:800px;
      }

      #mainTitle{
        font-family: 'Lobster', sans-serif;
        text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
        margin-top:150px;
        text-align: center;
        font-size:80px;
        color:white;
      }

      .navbar-inverse .navbar-nav>li>a {
        color:white;
      }

      #titleDetails{
        text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
        text-align: center;
        font-size:30px;
        color:white;
        font-family: 'Open Sans', sans-serif

      }

      #searchGarageLink{
        width:150px;
        text-align: center;
        margin:auto;
      }

      .navbar-inverse .navbar-nav>li>a {
        color:white;    
        font-size: 16px;

      }

      .fa-shopping-cart{
        color:white;
      }

      #catchPhrase{
        font-size: 25px;
      }
      #homeButton {
        width:150px;
        margin:0 auto;
      }
    </style>
  </head>
  <body ng-controller='HomeController'>
   
   
    <!-- <img src="/app/assets/images/garagesaleimages/homepage.jpg"> -->
    <h1 id='brandName'><strong>The Whole Nine YardSales</strong></h1>
    <p id='catchPhrase'>"One man's trash is another man's treasure"</p>
    <div id='homeButton'><a href='/find_garage_sales'><button type='button', class='btn btn-default'>Find Garage Sales</button></a></div>
    <div id='space'></div>
    <div
        class="fb-like"
        data-share="true"
        data-width="450"
        data-show-faces="true">
    </div>
    <fb:login-button scope="public_profile,email,user_friends" onlogin="checkLoginState();" style='height:20px;'>
    </fb:login-button>

    <div id="status">
    </div>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

    <div id="map"></div>
    <input type='button' value='Find Garage Sales Near Me' onclick='getLocalGarageSales()'></input>
<!--     <input type='button' value='Find Garage Sales Near Me' ng-click='getDistanceBetweenMarkers()'></input> -->
    <p>{{garageSales}}</p>
    <div ng-view>
    </div>

    <script>
        var facebookAccessToken;
        function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
          console.log(response.authResponse.accessToken);
          facebookAccessToken = response.authResponse.accessToken;
          // Logged into your app and Facebook.
          testAPI();
        } else if (response.status === 'not_authorized') {
          // The person is logged into Facebook, but not your app.
          document.getElementById('status').innerHTML = 'Please log ' +
            'into this app.';
        } else {
          // The person is not logged into Facebook, so we're not sure if
          // they are logged into this app or not.
          document.getElementById('status').innerHTML = 'Please log ' +
            'into Facebook.';
        }
      }
    
      // This function is called when someone finishes with the Login
      // Button.  See the onlogin handler attached to it in the sample
      // code below.
      function checkLoginState() {
        FB.getLoginStatus(function(response) {
          statusChangeCallback(response);
        });
      }
    
      window.fbAsyncInit = function() {
      FB.init({
        appId      : 603497913123464,
        cookie     : true,  // enable cookies to allow the server to access 
                            // the session
        xfbml      : true,  // parse social plugins on this page
        version    : 'v2.2' // use version 2.2
      });
    
      // Now that we've initialized the JavaScript SDK, we call 
      // FB.getLoginStatus().  This function gets the state of the
      // person visiting this page and can return one of three states to
      // the callback you provide.  They can be:
      //
      // 1. Logged into your app ('connected')
      // 2. Logged into Facebook, but not your app ('not_authorized')
      // 3. Not logged into Facebook and can't tell if they are logged into
      //    your app or not.
      //
      // These three cases are handled in the callback function.
    
      FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
      });
    
      };
    
      // Load the SDK asynchronously
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));
    
      // Here we run a very simple test of the Graph API after login is
      // successful.  See statusChangeCallback() for when this call is made.
      function testAPI() {
        console.log('Welcome!  Fetching your information.... ');
        FB.api('/me', function(response) {
          console.log('Successful login for: ' + response.name);
          console.log(JSON.stringify(response));
          document.getElementById('status').innerHTML =
            'Thanks for logging in, ' + response.name + '!';
        });
      }
    </script>
